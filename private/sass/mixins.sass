/** Define the mixins **/
@mixin border-radius($radius)
	border-radius: $radius
	-moz-border-radius: $radius

@mixin border-bottom-radius($radius)
	border-bottom-left-radius: $radius
	-moz-border-bottom-left-radius: $radius
	border-bottom-right-radius: $radius
	-moz-border-bottom-right-radius: $radius
	
@mixin border-top-radius($radius)
	border-top-left-radius: $radius
	-moz-border-top-left-radius: $radius
	border-top-right-radius: $radius
	-moz-border-top-right-radius: $radius

@mixin border-left-radius($radius)
	border-top-left-radius: $radius
	-moz-border-top-left-radius: $radius
	border-bottom-left-radius: $radius
	-moz-border-bottom-left-radius: $radius

@mixin border-top-left-radius($radius)
	border-top-left-radius: $radius
	-moz-border-top-left-radius: $radius

@mixin border-bottom-left-radius($radius)
	border-bottom-left-radius: $radius
	-moz-border-bottom-left-radius: $radius

@mixin border-right-radius($radius)
	border-top-right-radius: $radius
	-moz-border-top-right-radius: $radius
	border-bottom-right-radius: $radius
	-moz-border-bottom-right-radius: $radius

@mixin border-top-right-radius($radius)
	border-top-right-radius: $radius
	-moz-border-top-right-radius: $radius

@mixin border-bottom-right-radius($radius)
	border-bottom-right-radius: $radius
	-moz-border-bottom-right-radius: $radius

@mixin box-shadow($left, $top, $amount, $color)
	box-shadow: $left $top $amount $color
	-webkit-box-shadow: $left $top $amount $color
	-moz-box-shadow: $left $top $amount $color

@mixin inner-box-shadow($left, $top, $amount, $color)
	box-shadow: inset $left $top $amount $color
	-webkit-box-shadow: inset $left $top $amount $color
	-moz-box-shadow: inset $left $top $amount $color
	
@mixin glow($amount, $color)
	box-shadow: 0px 0px $amount $color
	-webkit-box-shadow: 0px 0px $amount $color
	-moz-box-shadow: 0px 0px $amount $color
	
@mixin inner-glow($amount, $color)
	box-shadow: inset 0px 0px $amount $color
	-webkit-box-shadow: inset 0px 0px $amount $color
	-moz-box-shadow: inset 0px 0px $amount $color
	
@mixin shadow($amount, $color: #000000)
	box-shadow: 0px $amount/3 $amount $color
	-webkit-box-shadow: 0px $amount/3 $amount $color
	-moz-box-shadow: 0px $amount/3 $amount $color

@mixin inner-shadow($amount, $color: #000000)
	box-shadow: inset 0px $amount/3 $amount $color
	-webkit-box-shadow: inset 0px $amount/3 $amount $color
	-moz-box-shadow: inset 0px $amount/3 $amount $color

@mixin opacity($opacity)
	opacity: $opacity
	-moz-opacity: $opacity
	-webkit-opacity: $opacity
	-o-opacity: $opacity
	filter: alpha(opacity=$opacity*100)

@mixin picture-glow($width)
	+box-shadow(0px, 1px, $width*3, #d8d8d8)
	+border-radius($width)
	border: $width solid #ffffff
	
@mixin picture-border($width, $color: #ffffff, $shadow: #999999)
	+glow($width - 1, $shadow)
	border: $width solid $color

@mixin gradient($start, $finish)  
	background-color: mix($start,$finish)
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0, startColorstr='#{$start}', endColorstr='#{$finish}')
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{$start}', endColorstr='#{$finish}')"
	background: -webkit-gradient(linear, left top, left bottom, from($start), to($finish))
	background: -moz-linear-gradient(top,  $start,  $finish)
	background: -o-linear-gradient(top, $start, $finish)

@mixin horizontal-gradient($start, $finish)  
	background-color: mix($start,$finish)
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, startColorstr='#{$start}', endColorstr='#{$finish}')
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=1, startColorstr='#{$start}', endColorstr='#{$finish}')"
	background: -webkit-gradient(linear, left top, right top, from($start), to($finish))
	background: -moz-linear-gradient(left,  $start,  $finish)
	background: -o-linear-gradient(left, $start,$finish)

@mixin no-gradient
	background-color: none
	filter: none
	-ms-filter: none
	background: none

@mixin rotate($deg)
	-webkit-transform: rotate(#{$deg}deg)
	-moz-transform: rotate(#{$deg}deg)
	-o-transform: rotate(#{$deg}deg)
	-ms-transform: rotate(#{$deg}deg)
	filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$deg/180})
	transform: rotate(#{$deg}deg)

@mixin rotateX($deg)
	-webkit-transform: rotateX(#{$deg}deg)
	-moz-transform: rotateX(#{$deg}deg)
	-o-transform: rotateX(#{$deg}deg)
	-ms-transform: rotateX(#{$deg}deg)
	filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$deg/180})
	transform: rotateX(#{$deg}deg)

@mixin transition-property($property)
	-moz-transition-property: $property
	-webkit-transition-property: $property
	-o-transition-property: $property
	-ms-transition-property: $property
	transition-property: $property

@mixin transition-duration($duration)
	-moz-transition-duration: $duration
	-webkit-transition-duration: $duration
	-o-transition-duration: $duration
	-ms-transition-duration: $duration
	transition-duration: $duration

	-webkit-transform-style: preserve-3d
	-webkit-transform: translate3d(0, 0, 0)
	transform-style: preserve-3d
	transform: translate3d(0, 0, 0)

@mixin transition-timing-function($timingFunction)
	-moz-transition-timing-function: $timingFunction
	-webkit-transition-timing-function: $timingFunction
	-o-transition-timing-function: $timingFunction
	-ms-transition-timing-function: $timingFunction
	transition-timing-function: $timingFunction

@mixin transition-delay($delay)
	-moz-transition-delay: $delay
	-webkit-transition-delay: $delay
	-o-transition-delay: $delay
	-ms-transition-delay: $delay
	transition-delay: $delay

@mixin text-gradient($start, $finish)
	background: -webkit-gradient(linear, #{"left top"}, #{"left bottom"}, from($start), to($finish))
	-webkit-background-clip: text
	-webkit-text-fill-color: transparent

@mixin blur( $amount )
	-webkit-filter: blur( $amount )
	-moz-filter: blur( $amount )
	-ms-filter: blur( $amount )
	-o-filter: blur( $amount )
	filter: blur( $amount )

@mixin no-tap
	-webkit-tap-highlight-color: rgba(0,0,0,0)
	outline: none

@mixin no-select
	-webkit-touch-callout: none
	-webkit-user-select: none
	-khtml-user-select: none
	-moz-user-select: none
	-ms-user-select: none
	user-select: none

@mixin border-box
	-webkit-box-sizing: border-box
	-moz-box-sizing: border-box
	box-sizing: border-box

@mixin translate( $x, $y )
	transform: translate( $x, $y )
	-ms-transform: translate( $x, $y )
	-webkit-transform: translate( $x, $y )

//------------------------------------------
// Media Queries
//------------------------------------------
$phone-portrait-width: 360px
$phone-landscape-width: 640px

$tablet-portrait-width: 768px
$tablet-landscape-width: 1024px

$desktop-portrait-width: 1200px
$desktop-landscape-width: 1600px

@mixin phone
	@media screen and (max-width: $phone-portrait-width) and (orientation: portrait), screen and (max-width: $phone-landscape-width) and (orientation: landscape), handheld and (max-device-width: $phone-portrait-width) and (orientation: portrait), handheld and (max-device-width: $phone-landscape-width) and (orientation: landscape)
		@content

@mixin phone-portrait
	@media screen and (max-width: $phone-portrait-width) and (orientation: portrait), handheld and (max-device-width: $phone-portrait-width) and (orientation: portrait)
		@content

@mixin phone-landscape
	@media screen and (max-width: $phone-landscape-width) and (orientation: landscape), handheld and (max-device-width: $phone-landscape-width) and (orientation: landscape)
		@content

@mixin tablet
	@media screen and (max-width: $tablet-portrait-width) and (min-width: $phone-portrait-width+1) and (orientation: portrait), screen and (max-width: $tablet-landscape-width) and (min-width: $phone-landscape-width+1) and (orientation: landscape), screen and (max-device-width: $tablet-portrait-width) and (min-device-width: $phone-portrait-width+1) and (orientation: portrait), screen and (max-device-width: $tablet-landscape-width) and (min-device-width: $phone-landscape-width+1) and (orientation: landscape)
		@content

@mixin tablet-portrait
	@media screen and (max-width: $tablet-portrait-width) and (min-width: $phone-portrait-width+1) and (orientation: portrait), screen and (max-device-width: $tablet-portrait-width) and (min-device-width: $phone-portrait-width+1) and (orientation: portrait)
		@content

@mixin tablet-landscape
	@media screen and (max-width: $tablet-landscape-width) and (min-width: $phone-landscape-width+1) and (orientation: landscape), screen and (max-device-width: $tablet-landscape-width) and (min-device-width: $phone-landscape-width+1) and (orientation: landscape)
		@content

@mixin mobile
	@media screen and (max-width: $tablet-portrait-width) and (orientation: portrait), screen and (max-width: $tablet-landscape-width) and (orientation: landscape), screen and (max-device-width: $tablet-portrait-width) and (orientation: portrait), screen and (max-device-width: $tablet-landscape-width) and (orientation: landscape)
		@content

@mixin mobile-portrait
	@media screen and (max-width: $tablet-portrait-width) and (orientation: portrait), screen and (max-device-width: $tablet-portrait-width) and (orientation: portrait)
		@content

@mixin mobile-landscape
	@media screen and (max-width: $tablet-landscape-width) and (orientation: landscape), screen and (max-device-width: $tablet-landscape-width) and (orientation: landscape)
		@content

@mixin desktop
	@media screen and (max-width: $desktop-portrait-width) and (min-width: $tablet-portrait-width+1) and (orientation: portrait), screen and (max-width: $desktop-landscape-width) and (min-width: $tablet-landscape-width+1) and (orientation: landscape), screen and (max-device-width: $desktop-portrait-width) and (min-device-width: $tablet-portrait-width+1) and (orientation: portrait), screen and (max-device-width: $desktop-landscape-width) and (min-device-width: $tablet-landscape-width+1) and (orientation: landscape)
		@content

@mixin wide-screen
	@media screen and (min-width: $desktop-landscape-width+1) and (orientation: landscape), screen and (min-width: $desktop-portrait-width+1) and (orientation: portrait), screen and (min-device-width: $desktop-landscape-width+1) and (orientation: landscape), screen and (min-device-width: $desktop-portrait-width+1) and (orientation: portrait)
		@content

@mixin portrait
	@media screen and (orientation: portrait)
		@content

@mixin landscape
	@media screen and (orientation: landscape)
		@content

@mixin keyframes($name)
	@-webkit-keyframes #{$name}
		@content
	@-moz-keyframes #{$name}
		@content
	@-ms-keyframes #{$name}
		@content
	@keyframes #{$name}
		@content

@mixin animation($properties)
	animation: #{$properties}
	-moz-animation: #{$properties}
	-webkit-animation: #{$properties}
	-o-animation: #{$properties}

@mixin backface-visibility($visibility)
	-webkit-backface-visibility: #{$visibility}
	-moz-backface-visibility: #{$visibility}
	-ms-backface-visibility: #{$visibility}
	backface-visibility: #{$visibility}

@mixin icon($icon)
	font-family: FontAwesome

	@if $icon == remove
		content: "\f00d"
	@else if $icon == ok
		content: "\f00c"
